# Generated by Django 4.0.2 on 2022-03-03 18:09

from django.db import migrations


def create_groups(apps, schema_migration):
    User = apps.get_model('authentication', 'User')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')


    add_user, created = Permission.objects.get_or_create(codename='add_user')
    change_user = Permission.objects.get(codename='change_user')
    delete_user = Permission.objects.get(codename='delete_user')
    view_user = Permission.objects.get(codename='view_user')
    add_client = Permission.objects.get(codename='add_client')
    change_client = Permission.objects.get(codename='change_client')
    view_client = Permission.objects.get(codename='view_client')
    add_event = Permission.objects.get(codename='add_event')
    change_event = Permission.objects.get(codename='change_event')
    view_event = Permission.objects.get(codename='view_event')
    add_contract = Permission.objects.get(codename='add_contract')
    change_contract = Permission.objects.get(codename='change_contract')
    view_contract = Permission.objects.get(codename='view_contract')

    manager_permissions = [
        add_user,
        change_user,
        delete_user,
        view_user,
        change_client,
        view_client,
        change_event,
        view_event,
        change_contract,
        view_contract,
    ]

    manager = Group(name='manager')
    manager.save()

    manager.permissions.set(manager_permissions)

    sales_permissions = [
        add_client,
        change_client,
        view_client,
        add_event,
        change_event,
        view_event,
        add_contract,
        change_contract,
        view_contract,
    ]

    sales = Group(name='sales')
    sales.save()

    sales.permissions.set(sales_permissions)

    support_permissions = [
        view_client,
        change_event,
        view_event,
        view_contract,
    ]

    support = Group(name='support')
    support.save()

    support.permissions.set(support_permissions)

    for user in User.objects.all():
        if user.role == 'MANAGER':
            maanger.user_set.add(user)
        if user.role == 'SALES':
            sales.user_set.add(user)
        if user.role == 'SUPPORT':
            support.user_set.add(user)


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_groups)
    ]
